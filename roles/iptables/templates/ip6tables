# {{ ansible_managed }}
{% if iptables.enable_nat is defined and iptables.enable_nat == True %}
{% if ansible_distribution_major_version |int > 6 %}
*nat
{% if ip6tables.custom_nat_rules is defined %}
{% for rule in ip6tables.custom_nat_rules %}
{{ rule }}
{% endfor %}
{% endif %}
COMMIT
{% endif %}
{% endif %}
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# loopback allowed
-A INPUT -i lo -j ACCEPT

# Accept ping and traceroute (needs icmp)
-A INPUT -p ipv6-icmp -j ACCEPT

# Established connections allowed
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
-A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

{% if iptables.permit_public_ssh == True %}
# allow ssh - always
-A INPUT -m conntrack --ctstate NEW -m tcp -p tcp --dport {{ iptables.ssh_port }} -j ACCEPT
{% endif %}

# if the host/group defines incoming tcp_ports - allow them
{% if iptables.tcp_ports is defined %}
{% for port in iptables.tcp_ports %}
-A INPUT -p tcp -m tcp --dport {{ port }} -j ACCEPT
{% endfor %}
{% endif %}

# if the host/group defines incoming udp_ports - allow them
{% if iptables.udp_ports is defined %}
{% for port in iptables.udp_ports %}
-A INPUT -p udp -m udp --dport {{ port }} -j ACCEPT
{% endfor %}
{% endif %}

# if there are custom6 rules - put them in as-is
{% if ip6tables.custom_rules is defined %}
{% for rule in ip6tables.custom_rules %}
{{ rule }}
{% endfor %}
{% endif %}

# otherwise kick everything out
-A INPUT -j REJECT --reject-with icmp6-adm-prohibited
-A FORWARD -j REJECT --reject-with icmp6-adm-prohibited
COMMIT
